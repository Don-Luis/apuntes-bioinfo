randomdata <- matrix(rnorm(50 * 1000), ncol = 50)
class <- factor(c(rep("NC", 20), rep("cancer", 30)))
pvalues <- apply(randomdata, 1,
function(x) t.test(x ~ class)$p.value)
hist(pvalues)
sum(pvalues < 0.05)
randomdata[1, ]
randomdata <- matrix(rnorm(50 * 1000), ncol = 50)
class <- factor(c(rep("NC", 20), rep("cancer", 30)))
pvalues <- apply(randomdata, 1,
function(x) t.test(x ~ class)$p.value)
hist(pvalues)
sum(pvalues < 0.05)
randomdata[1, ]
randomdata[2, ]
class
as.numeric(class)
pvalues[1]
t.test(randomdata[1, ] ~ class)
randomdata <- matrix(rnorm(50 * 1000), ncol = 50)
class <- factor(c(rep("NC", 20), rep("cancer", 30)))
pvalues <- apply(randomdata, 1,
function(x) t.test(x ~ class)$p.value)
hist(pvalues)
sum(pvalues < 0.05)
sum(pvalues < 0.05)
v1 <- rnorm(10)
v2 <- c(rep("a", 6), rep("b", 4))
t.test(v1 ~ v2)
sum(pvalues <= 0.05)
randomdata[1, ]
randomdata[2, 3] #el valor en la segunda fila y tercera columna
ft <- function(x) {
tmp <- try(log(x), silent = TRUE)
if(inherits(tmp, "try-error")) {
warning(paste("It looks like something did not work:\n",
"   ", tmp))
} else{
return(tmp)
}
}
ft(9)
ft("a")
\section{Estructuras de datos bÃ¡sicas en R}
rep(1:3, 2)
rep(1:3, 2:4)
letters
a <- "hola"
if (is.numeric(a) && log(a)) cat("\n we entered in the if")
if (is.numeric(a) & log(a)) cat("\n we entered in the if")
if (is.numeric(a) && log(a)) cat("\n we entered in the if")
ages <- c(Juan = 23, Maria = 35, Irene = 12, Ana = 93)
names(ages)
ages
ages["Juan"]
x <- c(34, 89, 1000)
y <- factor(x)
y
as.numeric(y)
y
x <- c(34, 89, 1000)
y <- factor(x)
y
as.numeric(y)
y
as.numeric(as.character(y))
as.character(y)
plot(y ~ x, col = c("red", "blue")[group])
x <- c(34, 89, 1000)
y <- factor(x)
y
as.numeric(y)
y
as.numeric(as.character(y))
plot(y ~ x, col = c("red", "blue")[group])
as.character(y)
plot(y ~ x, col = c("red", "blue")[group])
plot(y ~ x, col = c("red", "blue")[c(2, 2, 1)])
gr <- c("B", "A", "A", "B", "A")
group <- factor(gr)
c("red", "blue")[gr]
c("red", "blue")[group]
c("red", "blue")[levels(group)]
c("red", "blue")[factor(levels(group))]
(m1 <- cbind(c(1, 3), c(2, 1)))
A <- matrix(1:15, nrow = 5)
A[1, ] ## first row
A[, 2] ## second column
A[4, 2] ## fourth row, second column
A[3, 2] <- 999
A[1, ] <- c(90, 91, 92)
A < 4
A[m1]
A[c(1, 3), c(2, 1)]
A[m1]
A
m1
A[c(2, 4), 1, drop = FALSE]
listA <- list(a = 1:5, b = letters[1:3])
listA[[1]]
listA[["a"]]
listA$a
listA[[1]][2]
listA[[1]][2]
listA[1]
(listB <- list(one.vector = 1:10,  hello = "Hola",
one.matrix = matrix(rnorm(20), ncol = 5),
another.list =
list(a = 5,
b = factor(c("male",
"female", "female")))))
listB[[c(3, 11)]]
listB[[3]][11]
listB[[3]][3, 3]
listB[[3]][c(3, 3)]
listB[c(3, 4)]
(AB <- data.frame(ID = c("a1", "a2", "a3", "a4", "a5"),
Age = c(12, 14, 12, 16, 19),
Sex = c("M", "F", "F", "M", "F"),
Y = 11, 14, 15, 12, 19))
(AC <- data.frame(ID = "a9", Age = 14, Sex = "M", Y = 17))
rbind(AB, AC)
(AB <- data.frame(ID = c("a1", "a2", "a3", "a4", "a5"),
Age = c(12, 14, 12, 16, 19),
Sex = c("M", "F", "F", "M", "F"),
Y = 11, 14, 15, 12, 19))
(AC <- data.frame(ID = "a9", Age = 14, Sex = "M", Y = 17))
(AB <- data.frame(ID = c("a1", "a2", "a3", "a4", "a5"),
Age = c(12, 14, 12, 16, 19),
Sex = c("M", "F", "F", "M", "F"),
Y = c(11, 14, 15, 12, 19))
(AB <- data.frame(ID = c("a1", "a2", "a3", "a4", "a5"),
Age = c(12, 14, 12, 16, 19),
Sex = c("M", "F", "F", "M", "F"),
Y = c(11, 14, 15, 12, 19)))
(AB <- data.frame(ID = c("a1", "a2", "a3", "a4", "a5"),
Age = c(12, 14, 12, 16, 19),
Sex = c("M", "F", "F", "M", "F"),
Y = c(11, 14, 15, 12, 19)))
(AC <- data.frame(ID = "a9", Age = 14, Sex = "M", Y = 17))
rbind(AB, AC)
(AB <- data.frame(ID = c("a1", "a2", "a3", "a4", "a5"),
Age = c(12, 14, 12, 16, 19),
Sex = c("M", "F", "F", "M", "F"),
Y = c(11, 14, 15, 12, 19)))
(AC <- data.frame(ID = "a9", Age = 14, Sex = "M", Y = 17))
rbind(AB, AC)
as.matrix(AB)
data.matrix(AB)
(AB2 <- rbind(AB, AC))
AB2$status <- rep(c("Z", "V"), 5)
AB2$status <- rep(c("Z", "V"), 2)
AB2$status <- rep(c("Z", "V"), 3)
AB2
plot(c(1, 21), c(1, 2.3),
type = "n", axes = FALSE, ann = FALSE)
## show pch
points(1:20, rep(1, 20), pch = 1:20)
text(1:20, 1.2, labels = 1:20)
text(11, 1.5, "pch", cex = 1.3)
## show colors for rainbow palette
points(1:20, rep(2, 20), pch = 16, col = rainbow(20))
text(11, 2.2, "col", cex = 1.3)
plot(c(0.2, 5), c(0.2, 5), type = "n", ann = FALSE, axes = FALSE)
for(i in 1:6) {
abline(0, i/3, lty = i, lwd = 2)
text(2, 2 * (i/3), labels = i, pos = 3)
}
runif(4)
set.seed(198)
runif(4)
set.seed(2) ## for reproducibility
x <- 1:10
y <- 2 * x + rnorm(length(x))
plot(x, y, xlab = "This is the label for the x axis",
ylab = "Label for the y axis")
## And now, we add a horizontal line:
abline(h = 5, lty = 2)
plot(c(1, 21), c(1, 2.3),
type = "b", axes = FALSE, ann = FALSE)
plot(c(1, 21), c(1, 2.3),
type = "n", axes = FALSE, ann = FALSE)
plot(c(0.2, 5), c(0.2, 5), type = "n", ann = FALSE, axes = FALSE)
plot(c(0.2, 5), c(0.2, 5), type = "b", ann = FALSE, axes = FALSE)
plot(c(1, 21), c(1, 2.3),
type = "n", axes = FALSE, ann = FALSE)
## show pch
points(1:20, rep(1, 20), pch = 1:20)
text(1:20, 1.2, labels = 1:20)
text(11, 1.5, "pch", cex = 1.3)
## show colors for rainbow palette
points(1:20, rep(2, 20), col = rainbow(20))
text(11, 2.2, "col", cex = 1.3)
plot(c(0.2, 5), c(0.2, 5), type = "b", ann = FALSE, axes = FALSE)
for(i in 1:6) {
abline(0, i/3, lty = i, lwd = 2)
text(2, 2 * (i/3), labels = i, pos = 3)
}
plot(c(0.2, 5), c(0.2, 5), type = "n", ann = FALSE, axes = FALSE)
for(i in 1:6) {
abline(0, i/3, lty = i, lwd = 2)
text(2, 2 * (i/3), labels = i, pos = 3)
}
?ann
?plot
table(AB2$Sex)
with(AB2, table(Sex, status)) ## note "with"
xtabs( ~ Sex + status, data = AB2)
table(AB2$Sex, AB2$status)
with(AB2, table(Sex, status)) ## note "with"
xtabs( ~ Sex + status, data = AB2)
table(AB)
(dfx <- as.data.frame(table(x)))
xtabs(Freq ~ a + b + c, data = dfx)
(x <-  data.frame(a = c(1,2,2,1,2,2,1),
b = c(1,2,2,1,1,2,1),
c = c(1,1,2,1,2,2,1)))
## Equivalent
table(x)
xtabs(~ a + b + c, data = x)
(dfx <- as.data.frame(table(x)))
xtabs(Freq ~ a + b + c, data = dfx)
(one.dataframe <- data.frame(age = c(12, 13, 16, 25, 28),
sex = factor(c("male", "female",
"female", "male", "male")))
)
one.dataframe <- rbind(one.dataframe, one.dataframe)
tapply(one.dataframe$age,
list(one.dataframe$sex, one.dataframe$country),
mean)
one.dataframe$age[6:10] <- one.dataframe$age[6:10] + 2
one.dataframe$country <- rep(c("A", "B"), c(5, 5))
one.dataframe$Y <- rnorm(10)
one.dataframe
tapply(one.dataframe$age, one.dataframe$sex, mean)
tapply(one.dataframe$age,
list(one.dataframe$sex, one.dataframe$country),
mean)
split(one.dataframe, one.dataframe$sex)
x <- y <- 0
iteration <- 1
while( (x < 10) && (y < 2)) {
cat(" ... iteration", iteration, "\n")
x <- x + runif(1)
y <- y + rnorm(1)
iteration <- iteration + 1
}
x
y
iteration <- 0
while(TRUE) {
iteration <- iteration + 1
cat(" ... iteration", iteration, "\n")
x <- rnorm(1, mean = 5)
y <- rnorm(1, mean = 7)
z <- x * y
if (z < 15) break
}
iteration <- 0
while(TRUE) {
iteration <- iteration + 1
cat(" ... iteration", iteration, "\n")
x <- rnorm(1, mean = 5)
y <- rnorm(1, mean = 7)
z <- x * y
if (z < 15) { break }
}
iteration <- 0
while(TRUE) {
iteration <- iteration + 1
cat(" ... iteration", iteration, "\n")
x <- rnorm(1, mean = 5)
y <- rnorm(1, mean = 7)
z <- x * y
if (z < 15) { break }
}
iteration <- 0
while(TRUE) {
iteration <- iteration + 1
cat(" ... iteration", iteration, "\n")
x <- rnorm(1, mean = 5)
y <- rnorm(1, mean = 7)
z <- x * y
if (z < 15) { break }
}
iteration <- 0
while(TRUE) {
iteration <- iteration + 1
cat(" ... iteration", iteration, "\n")
x <- rnorm(1, mean = 5)
y <- rnorm(1, mean = 7)
z <- x * y
if (z < 15) { break }
}
iteration <- 0
while(TRUE) {
iteration <- iteration + 1
cat(" ... iteration", iteration, "\n")
x <- rnorm(1, mean = 5)
y <- rnorm(1, mean = 7)
z <- x * y
if (z < 15) { break }
}
iteration <- 0
while(TRUE) {
iteration <- iteration + 1
cat(" ... iteration", iteration, "\n")
x <- rnorm(1, mean = 5)
y <- rnorm(1, mean = 7)
z <- x * y
if (z < 15) { break }
}
iteration <- 0
while(TRUE) {
iteration <- iteration + 1
cat(" ... iteration", iteration, "\n")
x <- rnorm(1, mean = 5)
y <- rnorm(1, mean = 7)
z <- x * y
if (z < 15) { break }
}
iteration <- 0
while(TRUE) {
iteration <- iteration + 1
cat(" ... iteration", iteration, "\n")
x <- rnorm(1, mean = 5)
y <- rnorm(1, mean = 7)
z <- x * y
if (z < 15) { break }
}
iteration <- 0
while(TRUE) {
iteration <- iteration + 1
cat(" ... iteration", iteration, "\n")
x <- rnorm(1, mean = 5)
y <- rnorm(1, mean = 7)
z <- x * y
if (z < 15) { break }
}
plotAndSummary <- function(x) {
plot(x)
print(summary(x))
}
x <- rnorm(50)
plotAndSummary(x)
plotAndLm <- function(x, y, title = "A figure") {
lm1 <- lm(y ~ x)
cat("\n Printing the summary of x\n")
print(summary(x))
cat("\n Printing the summary of y\n")
print(summary(y))
cat("\n Printing the summary of the linear regression\n")
print(summary(lm1))
plot(y ~ x, main = title)
abline(lm1)
return(lm1)
}
x <- 1:20
y <- 5 + 3 *x + rnorm(20, sd = 3)
plotAndLm(x, y)
plotAndLm(x, y, title = "A user specified title")
f1 <- function(x) {
x + z
}
z <- -100
f11 <- function(y) {
z <- 10
f1(y)
}
f11(4)
v <- 1000
f3 <- function(x, y) {
v <- 3 * x
f2 <- function(u) {
u + v
}
f2(y)
}
f3(2, 9)
search()
i <- 2
local({cat("i ", i); i <- 99; cat(";  i = ", i)})
i
f1 <- function(x) 3 * x
f2 <- function(x) 5 + f1(x)
f3 <- function(z, u) {
v <- runif(z)
a <- f2(u)
b <- f2(3 * v)
return(a + b)
}
f3(3, 7)
f3(-5, 6)
traceback()
f3(5, "a")
traceback()
as.list(body(lm))
trace(lm, tracer = browser, at = 5)
y <- runif(100)
x <- 1:100
lm(y ~ x)
untrace(lm)
install.packages(c("Rcmdr", "tkrplot", "dplyr", "doBy", "car",
"ggplot2", "tidyr", "multcomp", "effects", "HH", "RcmdrMisc",
"ISwR", "randomForest", "Rcpp", "testthat", "Rmpfr",
"sem", "rmarkdown", "rgl", "nortest", "aplpack",
"RcmdrPlugin.TeachingDemos",
"RcmdrPlugin.HH", "RcmdrPlugin.survival",
"RcmdrPlugin.sos", "vcd", "BiocManager"))
library(BiocManager)
BiocManager::install(c("OncoSimulR", "limma"))
setwd("~/GitHub/apuntes-bioinfo/Estadistica-R/apuntes")
install.packages("rmarkdown")
fa <- function(x, col = "red", ...) {plot(x, col = col, ...)}
fa(1:5, "blue", pch = 8)
