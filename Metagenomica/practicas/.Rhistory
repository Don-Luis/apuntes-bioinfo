setwd("~/Documents/GitHub/metag/metag")
load("~/Documents/GitHub/metag/metag/.RData")
print("Total Reads")
sum(out[,2])
#Modelo para las lecturas forward
errF <- learnErrors(filtFs,multithread=TRUE, nbases=130000000) #half of total bases
#Recomendable poner un título a cada bloque de código
library(dada2) #librería con la que se determinan SV
library (ggplot2)
library(plotly) #librería que genera una máscara encima de cualquier objeto ggplot para que el gráfico sea interactivo
library(DECIPHER) #analizar disparidad entre secuencias
library(ShortRead) #interpretación archivos fasta
library(Biostrings)
library(readr) #parte de tidyverse para la interpretación de dataframes
library("phyloseq") #integración de datos y hacer todos los gráficos
library("DESeq2") #permite ver qué bacterias son las enriquecidas en una muestra con respecto a otra; calcular diversidad
library("tibble")
library("dplyr")
library("tidyr")
library(openssl) #for the codification of ASVs nucleotide sequence into a shorter string (ASVs names)
library("vegan") #hacer estudios de diversidad
library("microbiome") #estudios de diversidad
library("hrbrthemes") #scales in plots of ggplot
library("RColorBrewer") #paletas de colores de degradados
library("data.table")#conversiones en dataframes que no son posibles en dplyr
#Modelo para las lecturas forward
errF <- learnErrors(filtFs,multithread=TRUE, nbases=130000000) #half of total bases
load("dadaobjects.Rdata")
load("dadaobjects.RData")
load("dadaobjects.RData")
plotErrors(errF, nominalQ=TRUE)
plotErrors(errR, nominalQ=TRUE)
print("Forward Reads")
dadaFs
print("Reverse Reads")
dadaRs
mergers <- mergePairs(dadaFs, filtFs, dadaRs, filtRs, verbose=TRUE)
setwd("~/Documents/GitHub/metag/metag")
mergers <- mergePairs(dadaFs, filtFs, dadaRs, filtRs, verbose=TRUE)
update.packages("dada2")
update.package("dada2")
#Recomendable poner un título a cada bloque de código
library(dada2) #librería con la que se determinan SV
library (ggplot2)
library(plotly) #librería que genera una máscara encima de cualquier objeto ggplot para que el gráfico sea interactivo
library(DECIPHER) #analizar disparidad entre secuencias
library(ShortRead) #interpretación archivos fasta
library(Biostrings)
library(readr) #parte de tidyverse para la interpretación de dataframes
library("phyloseq") #integración de datos y hacer todos los gráficos
library("DESeq2") #permite ver qué bacterias son las enriquecidas en una muestra con respecto a otra; calcular diversidad
library("tibble")
library("dplyr")
library("tidyr")
library(openssl) #for the codification of ASVs nucleotide sequence into a shorter string (ASVs names)
library("vegan") #hacer estudios de diversidad
library("microbiome") #estudios de diversidad
library("hrbrthemes") #scales in plots of ggplot
library("RColorBrewer") #paletas de colores de degradados
library("data.table")#conversiones en dataframes que no son posibles en dplyr
mergers <- mergePairs(dadaFs, filtFs, dadaRs, filtRs, verbose=TRUE)
#Modelo para las lecturas forward
errF <- learnErrors(filtFs,multithread=TRUE, nbases=130000000) #half of total bases
#Coge como input los archivos filtrados
#Multithread TRUE no sirve para Windows, habría que cambiarlo
#nbases es una decisión que hay que tomar para ver cuántos nucleótidos se van a analizar. Se recomienda la mitad o un cuarto de los nucleótidos en la población muestral, depende de las ganas que tengamos a esperar. Cuanto más pequeño sea el modelo, menor diversidad y menor fiabilidad.
#Hay un parámetro que indica si coge las lecturas al azar. Esto sería interesante para no coger solo lecturas de los primeros archivos, si no de todos.
